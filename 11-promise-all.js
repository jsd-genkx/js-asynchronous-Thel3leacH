export const promiseAllOrders = () => {
	console.log("üìù Starting all orders‚Ä¶");

	// create promises each time the function runs
	const pizza = new Promise(
		(resolve, reject) =>
			// üß™ try swapping resolve/reject to test
			// setTimeout(() => resolve("üçï Pizza is ready!"), 3000)
		setTimeout(() => reject("üçï Pizza is not ready!"), 3000)
	);

	const drink = new Promise(
		(resolve, reject) => setTimeout(() => resolve("ü•§ Drink is ready!"), 1000)
		// setTimeout(() => reject("ü•§ Drink is not ready!"), 2000)
	);

	const dessert = new Promise(
		(resolve, reject) => setTimeout(() => resolve("üç∞ Dessert is ready!"), 2000)
		// setTimeout(() => reject("üç∞ Dessert is not ready!"), 1000)
	);

	Promise.all([pizza, drink, dessert])
		.then((values) => {
			console.log("‚úÖ All items are ready:", values);
		})
		.catch((error) => {
			console.error("‚ö†Ô∏è One of the orders failed!", error);
		})
		.finally(() => {
			console.log("‚ÑπÔ∏è All orders processed (success or fail).");
		});
};

// promiseAllOrders();
